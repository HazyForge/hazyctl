name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          COMMIT: ${{ github.sha }}
          DATE: $(date -u +'%Y-%m-%dT%H:%M:%SZ')  # For Linux runners
        run: |
          # Build binary
          OUTPUT="hazyctl"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT="$OUTPUT.exe"
          fi
          
          go build -ldflags "\
            -X 'github.com/hazyforge/hazyctl/pkg/version.Version=${{ env.VERSION }}' \
            -X 'github.com/hazyforge/hazyctl/pkg/version.Commit=${{ env.COMMIT }}' \
            -X 'github.com/hazyforge/hazyctl/pkg/version.Date=${{ env.DATE }}'" \
            -o $OUTPUT

          # Create archive directory structure
          mkdir -p "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}"
          cp $OUTPUT "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}/"
          cp LICENSE "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}/"

          # Package based on OS
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -r "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}.zip" "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}/"
          else
            tar czvf "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz" "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}/"
          fi

          # Generate individual SHA checksum
          for file in "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}".*; do
            shasum -a 256 "$file" > "$file.sha256"
          done

          mkdir -p release
          mv "hazyctl_${VERSION}_${{ matrix.goos }}_${{ matrix.goarch }}".* release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: release
          retention-days: 1

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: release/*

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/hazyctl_*.tar.gz
            release/hazyctl_*.zip
            release/hazyctl_*.sha256
